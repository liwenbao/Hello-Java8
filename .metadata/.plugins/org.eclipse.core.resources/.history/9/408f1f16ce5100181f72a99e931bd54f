package designpattern;

/*
 * 职责链模式
 * 将一些列相同接口的实现组成链表，当一个对象不能处理请求时提交给下一个对象处理。
 * 适用场景：词性标注器（三元、二元、简单标准组成链表）；语法解析器（解析为不同的语法对象）
 */
public class ResponsibilityChainPattern {
	
}

interface Parser{
	CalcNode parseAsNode();
}

class FunctionParser implements Parser{
	
	private Parser next;

	@Override
	public CalcNode parseAsNode() {
		System.out.println("");
		return null;
	}
	
}
