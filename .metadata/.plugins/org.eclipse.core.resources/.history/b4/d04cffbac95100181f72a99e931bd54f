package designpattern;

/*
 * 代理模式
 * 与装饰器模式从结构上看十分相似，区别在于使用目的。装饰器一般为了被装饰对象添加新功能，代理一般用于控制被代理对象的行为。
 */
public class ProxyPattern {

}

interface HttpServer{
	void get(String resource);
}

class RealHttpServer implements HttpServer{
	
	@Override
	public void get(String resource) {
		System.out.println("实际响应HTTP请求，请求资源为：" + resource);
	}
}
